# Indicator Variables

## Required packages

The following CRAN packages must be installed:

| Required CRAN Packages |
|------------------------|
| tidyverse              |
| usethis                |
| janitor                |
| skimr                  |
| tidymodels             |



## Page 118 Single Categorical Predictor

```{r}
#| eval: false

library(usethis) # use_github_file 
library(tidyverse) # read_csv()
library(janitor) # clean_names() 
library(skimr) # skim()
library(tidymodels) #tidy() glance()
```

```{r}
#| include: false

library(usethis) # use_github_file 
library(tidyverse) # read_csv()
library(janitor) # clean_names() 
library(skimr) # skim()
library(tidymodels) #tidy() glance()
```

### Obtain data and save it to your computer

```{r}
#| include: false
use_github_file(repo_spec = "https://github.com/johnhoffmannVA/LinearRegression/blob/main/GSS2018.csv",
                save_as = "gss2018.csv")

gss2018 <- read_csv("gss2018.csv", show_col_types = FALSE) %>% clean_names()
```

```{r}
#| eval: false
use_github_file(repo_spec = "https://github.com/johnhoffmannVA/LinearRegression/blob/main/GSS2018.csv",
                save_as = "gss2018.csv")
```

### Load data from your computer

```{r}
#| eval: false
gss2018 <- read_csv("gss2018.csv") %>% 
  clean_names()
```

### Inspect data

```{r}
gss2018 %>% 
  glimpse()  
```

Notice female is a chr variable. 

### Making female a factor (don't skip this step)

We need to make female a factor variable. Then indicate that female is the reference. That is female = 0 and male = 1.

```{r}
gss2018 <- gss2018 %>%
  mutate(female = as_factor(female)) %>%
  mutate(female = relevel(female, ref = "female"))
```


See how female is now a factor:

```{r}
gss2018 %>% 
  glimpse()  
```

### Group means

```{r}
# We use as.data.frame() got get more decimials

gss2018 %>% 
  group_by(female) %>%
  summarise(group_mean = mean(pincome)) %>%
  as.data.frame()

```



### Regression (as per textbook)

```{r}
lm7_1 <- lm(pincome ~ female,
            data = gss2018)
```


```{r}
#| eval: false
tidy(lm7_1)
```

```{r}
#| eval: true
#| echo: false
knitr::kable(tidy(lm7_1))
```


```{r}
#| eval: false
ggplot(data = gss2018,
       mapping = aes(x = female,
                     y = pincome)) +
  stat_summary(fun = "mean",
               geom="bar") +
  scale_y_continuous(breaks = seq(0, 15)) +
  theme_classic(12)
```


```{r}
#| echo: false

ggplot(data = gss2018,
       mapping = aes(x = female,
                     y = pincome)) +
  stat_summary(fun = "mean",
               geom="bar") +
  annotate(geom = "text", label = "8.221350", x= 1, y = 8.221350+.5) +
  annotate(geom = "text", label = "8.221350 + 2.660494 = 10.88184", x= 2, y = 8.221350+2.660494+.5) +
  scale_y_continuous(breaks = seq(0, 15)) +
  theme_classic(12)
```


### Explanation Part 1: Fewer Cases

Let's look at a subset of the data to understand what happened above. We'll look at the first 20 rows of the data, and do the analysis again.

```{r}
gss_small <- gss2018 %>%
  select(pincome, female) %>%
  slice_head(n = 20)
```

```{r}
print(gss_small)
```


```{r}
gss_small <- gss_small %>%
  mutate(female = as_factor(female)) %>%
  mutate(female = relevel(female, ref = "female"))
```

Let's check out the group means for this smaller data set:

```{r}
# We use as.data.frame() got get more decimials

gss_small %>% 
  group_by(female) %>%
  summarise(group_mean = mean(pincome)) %>%
  as.data.frame()

```


Now let's do the regression:

```{r}
lm7_small <- lm(pincome ~ female,
            data = gss_small)
```


```{r}
#| eval: false
tidy(lm7_small)
```

```{r}
#| eval: true
#| echo: false
knitr::kable(tidy(lm7_small))
```



```{r}
#| eval: false

ggplot(data = gss_small,
       mapping = aes(x = female,
                     y = pincome)) +
  stat_summary(fun = mean,
               geom="bar") +
  scale_y_continuous(breaks = seq(0, 20)) +
  theme_classic(12)
```


```{r}
#| echo: false

ggplot(data = gss_small,
       mapping = aes(x = female,
                     y = pincome)) +
  stat_summary(fun = mean,
               geom="bar") +
  annotate(geom = "text", label = "8.166667", x= 1, y = 8.221350+.5) +
  annotate(geom = "text", label = "8.166667 + 7.958333 = 16.125", x= 2, y = 8.221350+7.958333+.5) +
  scale_y_continuous(breaks = seq(0, 20)) +
  theme_classic(12)
```


### Explanation Part 2: Numeric Coding

We create a column with 0 for female and 1 for male. 

```{r}
gss_numeric_small <- gss_small

gss_numeric_small$reference_female <-0

id <- gss_numeric_small$female == "male"
gss_numeric_small$reference_female[id] <- 1

print(gss_numeric_small)
```

Now let's do the regression again!

```{r}
lm7_numeric_small <- lm(pincome ~ reference_female,
            data = gss_numeric_small)
```


```{r}
#| eval: false
tidy(lm7_numeric_small)
```

```{r}
#| eval: true
#| echo: false
knitr::kable(tidy(lm7_numeric_small))
```


```{r}
#| eval: false

ggplot(data = gss_numeric_small,
       mapping = aes(x = reference_female,
                     y = pincome)) +
  stat_summary(fun = mean,
               geom="bar") +
  scale_y_continuous(breaks = seq(0, 20)) +
  theme_classic(12)
```


```{r}
#| echo: false

ggplot(data = gss_numeric_small,
       mapping = aes(x = reference_female,
                     y = pincome)) +
  stat_summary(fun = mean,
               geom="bar") +
  annotate(geom = "text", label = "8.166667", x= 0, y = 8.221350+.5) +
  annotate(geom = "text", label = "8.166667 + 7.958333 = 16.125", x= 1, y = 8.221350+7.958333+.5) +
  scale_y_continuous(breaks = seq(0, 20)) +
  theme_classic(12)
```


## Page 120 Single Categorical t-test

```{r}
t.test(pincome ~ female, gss2018)

```

```{r}
# We use as.data.frame() got get more decimials

gss2018 %>% 
  group_by(female) %>%
  summarise(group_mean = mean(pincome)) %>%
  as.data.frame()

```


## Page 122 Multiple Categorical Predictor

```{r}
gss2018 <- gss2018 %>%
  mutate(female = as_factor(female)) %>%
  mutate(female = relevel(female, ref = "female"))

```

```{r}
gss2018 <- gss2018 %>%
  mutate(ethnic = as_factor(ethnic)) %>%
  mutate(ethnic = relevel(ethnic, ref = "White"))

```




```{r}
lm7_2 <- lm(pincome ~ female + ethnic, data = gss2018)

```


```{r}
library(tidymodels)
tidy(lm7_2)
```


```{r}
#| echho: false
# We use as.data.frame() got get more decimials
cell_means <- gss2018 %>% 
  group_by(female, ethnic) %>%
  summarise(pincome_mean = mean(pincome)) %>%
  as.data.frame()

print(cell_means)
```


```{r}
#| echo: false
cell_means <- cell_means %>%
  unite("cell_label", female, ethnic)

print(cell_means)
```

```{r}
#| echo: false
ggplot(data = cell_means,
       mapping = aes(x = cell_label,
                     y = pincome_mean)) +
  geom_col() +
  scale_y_continuous(breaks = seq(0, 16, by = 1)) + 
  coord_cartesian(ylim = c(0, 15)) +
  theme(axis.text.x = element_text(angle = 60, 
                                   hjust = 1))  

```


```{r}
#| eval: false
# We use as.data.frame() got get more decimials
cell_means <- gss2018 %>% 
  group_by(female, ethnic) %>%
  summarise(pincome_mean = mean(pincome)) %>%
  as.data.frame()

print(cell_means)
```


```{r}
#| eval: false
cell_means <- cell_means %>%
  unite("cell_label", female, ethnic)

print(cell_means)
```

```{r}
#| eval: false
ggplot(data = cell_means,
       mapping = aes(x = cell_label,
                     y = pincome_mean)) +
  geom_col() +
  scale_y_continuous(breaks = seq(0, 16, by = 1)) + 
  coord_cartesian(ylim = c(0, 15)) +
  theme(axis.text.x = element_text(angle = 60, 
                                   hjust = 1))  

```